
    >>> from common import *
    >>> import os
    >>> import ppf
    >>> from ppf import api
    >>> from app import app

    >>> tapp = app.test_client()

    >>> data = {'cmd': 'writeArticle',
    ...         'content': 'test'}

    >>> rv = tapp.post('api', data=data)
    >>> rv.status_code is 200
    True
    >>> rv.data in ['denied1', b'denied1']
    True


* writeArticle

** request test

    >>> base64_content = api.Data.encode_base64('content')

    >>> data = {'cmd': 'writeArticle',
    ...         'doc_id': '9999999999',
    ...         'secure_key': ppf.config.SECURE_KEY,
    ...         '_base64_content': base64_content}

    >>> rv = tapp.post('api', data=data) #doctest: +ELLIPSIS
    >>> rv.status_code is 200
    True
    >>> rv.data in ['ok', b'ok']
    True

    >>> dummy_fullpath = ppf.config.article_filename('9999999999')
    >>> dummy_fullpath #doctest: +SKIP
    '/home/ptmono/Desktop/Documents/ppf/htmls/9999999999.html'
    >>> filep = os.path.exists(dummy_fullpath)
    >>> filep
    True
    >>> if filep: os.remove(dummy_fullpath)


* Comment

** setup

    >>> #Write dummy html
    >>> rv = tapp.post('api', data=data) #doctest: +ELLIPSIS
    >>> rv.status_code
    200

** writeComment

We have to write all arg names


*** no article

    >>> dummy_doc_id = '9999999999'

    >>> comment_content = api.Data.encode_base64(u'comment_content')
    >>> comment_name = api.Data.encode_base64(u'ptmono')
    >>> data = {'cmd': 'writeComment',
    ...         'doc_id': dummy_doc_id,
    ...         '_base64_content': comment_content,
    ...         'secure_key': ppf.config.SECURE_KEY,
    ...         '_base64_name': comment_name,
    ...         'password': ''}

    >>> #There is no the article that has dummy_doc_id. This will return 500
    >>> rv = tapp.post('api', data=data)
    >>> rv.status_code
    500

    >>> dummy_comment_path = os.path.join(ppf.config.comments_d, '9999999999' + ppf.config.comment_extension)
    >>> dummy_comment_path ==  u'/home/ptmono/Desktop/Documents/ppf/htmls/9999999999.txt'
    True
    >>> filep = os.path.exists(dummy_comment_path)
    >>> filep
    False

To write comment, we need article

    >>> base64_content = api.Data.encode_base64('content')

    >>> data = {'cmd': 'writeArticle',
    ...         'doc_id': dummy_doc_id,
    ...         'secure_key': ppf.config.SECURE_KEY,
    ...         '_base64_content': base64_content}

    >>> rv = tapp.post('api', data=data) #doctest: +ELLIPSIS
    >>> dummy_fullpath = ppf.config.article_filename(dummy_doc_id)
    >>> dummy_fullpath #doctest: +SKIP
    '/home/ptmono/Desktop/Documents/ppf/htmls/9999999999.html'
    >>> filep = os.path.exists(dummy_fullpath)
    >>> filep
    True


# *** getComments

#     >>> data_getComments = {'cmd': 'getComments',
#     ...                     'doc_id': '9999999999',
#     ...                     'secure_key': ppf.config.SECURE_KEY}
#     >>> rv = tapp.post('api', data=data_getComments)
#     >>> rv.status_code is 200
#     True

#     >>> rv.data #doctest: +ELLIPSIS
#     "{u'1': {u'name': u'ptmono', u'comment_id': u'1', u'content': u'comment_content', u'date': u'...', u'password': u'', u'email': u''}}"

# *** deleteComments
#     >>> data_deleteComments = {'cmd': 'deleteComment',
#     ...                        'doc_id': '9999999999',
#     ...                        'comment_id': '1',
#     ...                        'secure_key': ppf.config.SECURE_KEY}

#     >>> rv = tapp.post('api', data=data_deleteComments)
#     >>> rv.status_code is 200
#     True

#     >>> rv = tapp.post('api', data=data_getComments)
#     >>> rv.data
#     '{}'

#     >>> if filep: os.remove(dummy_comment_path)


** teardown

    >>> try:
    ...     if os.path.exists(dummy_fullpath): os.remove(dummy_fullpath)
    ...     dummy_lock_filename = dummy_fullpath + '.lock'
    ...     if os.path.exists(dummy_lock_filename):
    ...         print('Dectected lockfile')
    ...         os.remove(dummy_lock_filename)
    ... except:
    ...     pass

